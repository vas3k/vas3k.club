import telegram
from django.conf import settings
from django.template import TemplateDoesNotExist
from django.urls import reverse

from notifications.telegram.common import Chat, ADMIN_CHAT, send_telegram_message, render_html_message
from bot.handlers.common import RejectReason
from users.models.user import User


def notify_profile_needs_review(user, intro):
    admin_profile_url = settings.APP_HOST + reverse("admin_profile", kwargs={"user_slug": user.slug})

    send_telegram_message(
        chat=ADMIN_CHAT,
        text=render_html_message("moderator_new_member_review.html", user=user, intro=intro),
        reply_markup=telegram.InlineKeyboardMarkup([
            [
                telegram.InlineKeyboardButton("üëç –í–ø—É—Å—Ç–∏—Ç—å", callback_data=f"approve_user:{user.id}")
            ],
            [
                telegram.InlineKeyboardButton("‚ùåÔ∏è –ü–ª–æ—Ö–æ–µ –∏–Ω—Ç—Ä–æ", callback_data=f"reject_user_intro:{user.id}"),
            ],
            [
                telegram.InlineKeyboardButton("‚ùåÔ∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö", callback_data=f"reject_user_data:{user.id}"),
            ],
            [
                telegram.InlineKeyboardButton("‚ùåÔ∏è –ê–≥—Ä–µ—Å—Å–∏—è", callback_data=f"reject_user_aggression:{user.id}"),
            ],
            [
                telegram.InlineKeyboardButton("‚ùåÔ∏è –°–ª–∏—à–∫–æ–º –æ–±—â–µ–µ", callback_data=f"reject_user_general:{user.id}"),
            ],
            [
                telegram.InlineKeyboardButton("‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —é–∑–µ—Ä—É", url=admin_profile_url),
            ]
        ])
    )


def notify_user_profile_approved(user):
    user_profile_url = settings.APP_HOST + reverse("profile", kwargs={"user_slug": user.slug})

    if user.telegram_id:
        send_telegram_message(
            chat=Chat(id=user.telegram_id),
            text=f"üöÄ –ü–æ–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –ø—Ä–æ—à–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏—é. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–ª—É–±!"
                 f"\n\n–ú–æ–∂–Ω–æ –ø–æ–π—Ç–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ —Å–º–µ—à–Ω—ã–µ –ø–æ–ª—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ:"
                 f"\n\n{user_profile_url}"
        )


def notify_user_profile_rejected(user: User, reason: RejectReason):
    try:
        text = render_html_message(f"rejected/{reason.value}.html", user=user)
    except TemplateDoesNotExist:
        text = render_html_message(f"rejected/intro.html", user=user)

    if user.telegram_id:
        send_telegram_message(
            chat=Chat(id=user.telegram_id),
            text=text,
        )


def notify_user_ping(user, message):
    if user.telegram_id:
        send_telegram_message(
            chat=Chat(id=user.telegram_id),
            text=f"üëã <b>–í–∞–º –ø–∏—Å—å–º–æ –æ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ö–ª—É–±–∞:</b> {message}"
        )


def notify_admin_user_ping(user, message):
    if user.telegram_id:
        send_telegram_message(
            chat=ADMIN_CHAT,
            text=f"üõé <b>–Æ–∑–µ—Ä–∞ {user.slug} –ø–∏–Ω–≥–∞–Ω—É–ª–∏:</b> {message}"
        )


def notify_admin_user_unmoderate(user):
    if user.telegram_id:
        send_telegram_message(
            chat=ADMIN_CHAT,
            text=f"üí£ <b>–Æ–∑–µ—Ä–∞ {user.slug} —Ä–∞–∑–º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–ª–∏</b>"
        )


def notify_user_auth(user, code):
    if user.telegram_id:
        send_telegram_message(
            chat=Chat(id=user.telegram_id),
            text=f"<pre>{code.code}</pre> ‚Äî –≤–∞—à –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ö–ª—É–±"
        )
