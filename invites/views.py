from datetime import datetime

from django.shortcuts import render, get_object_or_404, redirect
from django.urls import reverse

from authn.decorators.auth import require_auth
from authn.helpers import set_session_cookie
from authn.models.session import Session
from invites.models import Invite
from payments.products import club_subscription_activator, PRODUCTS
from users.models.user import User


@require_auth
def list_invites(request):
    return render(request, "invites/list_invites.html", {
        "invites": Invite.for_user(request.me),
    })


def show_invite(request, invite_code):
    invite = get_object_or_404(Invite, code=invite_code)
    if invite.user == request.me:
        return render(request, "invites/edit.html", {
            "invite": invite,
        })

    if invite.is_used:
        return render(request, "error.html", {
            "title": "–≠—Ç–æ—Ç –∏–Ω–≤–∞–π—Ç-–∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω ü•≤",
            "message": "–ö–∞–∂–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —ç—Ç–æ—Ç –∏–Ω–≤–∞–π—Ç. "
                       "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –µ–≥–æ –ø–æ–¥–∞—Ä–∏–ª, –∏ —Å–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å."
        })

    if invite.is_expired:
        return render(request, "error.html", {
            "title": "–≠—Ç–æ—Ç –∏–Ω–≤–∞–π—Ç –∏—Å—Ç–µ–∫ ü•≤",
            "message": "–ò–Ω–≤–∞–π—Ç-–∫–æ–¥ –Ω–∏–∫—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤ —Ç–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞ –∏ –æ–Ω –ø—Ä–æ—Ç—É—Ö. "
                       "–ü–æ –Ω–µ–º—É –±–æ–ª—å—à–µ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è."
        })

    return render(request, "invites/show.html", {
        "invite": invite
    })


def activate_invite(request, invite_code):
    invite = get_object_or_404(Invite, code=invite_code)

    if invite.is_used:
        return render(request, "error.html", {
            "title": "–≠—Ç–æ—Ç –∏–Ω–≤–∞–π—Ç-–∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω ü•≤",
            "message": "–ö–∞–∂–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —ç—Ç–æ—Ç –∏–Ω–≤–∞–π—Ç. "
                       "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –µ–≥–æ –ø–æ–¥–∞—Ä–∏–ª, –∏ —Å–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å."
        })

    if invite.is_expired:
        return render(request, "error.html", {
            "title": "–≠—Ç–æ—Ç –∏–Ω–≤–∞–π—Ç –∏—Å—Ç–µ–∫ ü•≤",
            "message": "–ò–Ω–≤–∞–π—Ç-–∫–æ–¥ –Ω–∏–∫—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤ —Ç–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞ –∏ –æ–Ω –ø—Ä–æ—Ç—É—Ö. "
                       "–ü–æ –Ω–µ–º—É –±–æ–ª—å—à–µ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è."
        })

    email = request.POST.get("email")
    if not email or "@" not in email or "." not in email:
        return render(request, "error.html", {
            "title": "–°—Ç—Ä–∞–Ω–Ω—ã–π email",
            "message": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å –ø–æ—á—Ç—ã, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è."
        })

    # create or find existing user
    now = datetime.utcnow()
    email = email.lower().strip()
    user, _ = User.objects.get_or_create(
        email=email,
        defaults=dict(
            membership_platform_type=User.MEMBERSHIP_PLATFORM_DIRECT,
            full_name=email[:email.find("@")],
            membership_started_at=now,
            membership_expires_at=now,
            created_at=now,
            updated_at=now,
            moderation_status=User.MODERATION_STATUS_INTRO,
        ),
    )

    # activate subscription
    club_subscription_activator(PRODUCTS[invite.payment.product_code], invite.payment, user)

    # expire the invite
    invite.used_at = now
    invite.invited_user = user
    invite.save()

    # log in user
    session = Session.create_for_user(user)
    redirect_to = reverse("profile", args=[user.slug])
    response = redirect(redirect_to)
    return set_session_cookie(response, user, session)
