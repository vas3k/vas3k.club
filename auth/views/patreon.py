from datetime import datetime
from urllib.parse import urlencode

from django.conf import settings
from django.db import IntegrityError
from django.shortcuts import render, redirect
from django.urls import reverse

from auth.exceptions import PatreonException
from auth.helpers import authorized_user, set_session_cookie
from auth.models import Session
from auth.providers import patreon
from users.models.user import User
from common.images import upload_image_from_url


def patreon_login(request):
    user = authorized_user(request)
    if user:
        return redirect("profile", user.slug)

    state = {}
    goto = request.GET.get("goto")
    if goto:
        state["goto"] = goto

    query_string = urlencode(
        {
            "response_type": "code",
            "client_id": settings.PATREON_CLIENT_ID,
            "redirect_uri": settings.PATREON_REDIRECT_URL,
            "scope": settings.PATREON_SCOPE,
            "state": urlencode(state) if state else "",
        }
    )
    return redirect(f"{settings.PATREON_AUTH_URL}?{query_string}")


def patreon_oauth_callback(request):
    code = request.GET.get("code")
    if not code:
        return render(request, "error.html", {
            "title": "–ß—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å –º–µ–∂–¥—É –Ω–∞–º–∏ –∏ –ø–∞—Ç—Ä–µ–æ–Ω–æ–º",
            "message": "–¢–∞–∫ –±—ã–≤–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è –µ—â–µ —Ä–∞–∑"
        })

    try:
        auth_data = patreon.fetch_auth_data(code)
        user_data = patreon.fetch_user_data(auth_data["access_token"])
    except PatreonException as ex:
        if "invalid_grant" in str(ex):
            return render(request, "error.html", {
                "title": "–¢—É—Ç —Ç–∞–∫–æ–µ –¥–µ–ª–æ üò≠",
                "message": "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–∞—Ç—Ä–µ–æ–Ω–∞ ‚Äî –≥–æ–≤–Ω–æ. "
                           "–û–Ω–∞ –Ω–µ —Å—Ä–∞–∑—É –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ –≤—ã —Å—Ç–∞–ª–∏ –ø–∞—Ç—Ä–æ–Ω–æ–º –∏ –æ—Ç–¥–∞—ë—Ç "
                           "—Å—Ç–∞—Ç—É—Å ¬´–æ—Ç–∫–∞–∑–∞–Ω–æ¬ª –≤ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç, –∞ –∏–Ω–æ–≥–¥–∞ –∏ —á–∞—Å–æ–≤. "
                           "–Ø —É–∂–µ –Ω–∞–ø–∏—Å–∞–ª –∏–º –≤ —Å–∞–ø–ø–æ—Ä—Ç, –Ω–æ –ø–æ–∫–∞ –≤–∞–º –Ω–∞–¥–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞. "
                           "–ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–µ –±—É–¥–µ—Ç –ø—É—Å–∫–∞—Ç—å ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–∫—É –Ω–∞ –ø–∞—Ç—Ä–µ–æ–Ω–µ."
            })

        return render(request, "error.html", {
            "message": "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å —Å —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø–∞—Ç—Ä–µ–æ–Ω–∞. "
                       "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ –æ–Ω–æ –ø–æ—á–∏–Ω–∏—Ç—Å—è. "
                       f"–ù–æ –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –≤–æ—Ç —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏, —Å –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –º–Ω–µ –≤ –ª–∏—á–∫—É:",
            "data": str(ex)
        })

    membership = patreon.parse_active_membership(user_data)
    if not membership:
        return render(request, "error.html", {
            "title": "–ù–∞–¥–æ –±—ã—Ç—å –ø–∞—Ç—Ä–æ–Ω–æ–º, —á—Ç–æ–±—ã —Å–æ—Å—Ç–æ—è—Ç—å –≤ –ö–ª—É–±–µ",
            "message": "–ö–∞–∂–µ—Ç—Å—è, –≤—ã –Ω–µ –ø–∞—Ç—Ä–æ–Ω–∏—Ç–µ <a href=\"https://www.patreon.com/join/vas3k\">@vas3k</a>. "
                       "–ê —ç—Ç–æ –æ–¥–Ω–æ –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ö–ª—É–±.<br><br>"
                       "–ï—â—ë –∏–Ω–æ–≥–¥–∞ –±—ã–≤–∞–µ—Ç, —á—Ç–æ –≤–∞—à –±–∞–Ω–∫ –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞—Ç—Ä–µ–æ–Ω—É –≤ —Å–Ω—è—Ç–∏–∏ –¥–µ–Ω–µ–≥. "
                       "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –≤—Å—ë –ª–∏ —Ç–∞–º —É –Ω–∏—Ö –≤ –ø–æ—Ä—è–¥–∫–µ."
        })

    now = datetime.utcnow()

    try:
        user, is_created = User.objects.get_or_create(
            patreon_id=membership.user_id,
            defaults=dict(
                email=membership.email,
                full_name=membership.full_name[:120],
                avatar=upload_image_from_url(membership.image) if membership.image else None,
                membership_platform_type=User.MEMBERSHIP_PLATFORM_PATREON,
                membership_started_at=membership.started_at,
                membership_expires_at=membership.expires_at,
                created_at=now,
                updated_at=now,
                is_email_verified=False,
            ),
        )
    except IntegrityError:
        return render(request, "error.html", {
            "title": "–ü—Ä–∏–¥—ë—Ç—Å—è –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ø–æ—á—Ç—É",
            "message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–π–ª–æ–º —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–æ –Ω–µ —á–µ—Ä–µ–∑ –ø–∞—Ç—Ä–µ–æ–Ω. "
                       "–ß—Ç–æ–±—ã –∑–∞—â–∏—Ç–∏—Ç—å—Å—è –æ—Ç —É–≥–æ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –ø–æ–¥–¥–µ–ª–∫—É –ø–æ—á—Ç—ã –Ω–∞ –ø–∞—Ç—Ä–µ–æ–Ω–µ, "
                       "–Ω–∞–º –ø—Ä–∏–¥—ë—Ç—Å—è —Å–µ–π—á–∞—Å –ø–æ–ø—Ä–æ—Å–∏—Ç—å –≤–∞—Å –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ø–æ—á—Ç—É. "
                       "–í –±—É–¥—É—â–µ–º –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º –≤ —Å–∞–ø–ø–æ—Ä—Ç —á—Ç–æ–±—ã –º—ã –ø—Ä–∏–≤—è–∑–∞–ª–∏ –≤–∞—à –ø–∞—Ç—Ä–µ–æ–Ω —Ç–æ–∂–µ –∫ –∞–∫–∫–∞—É–Ω—Ç—É."
        })

    if is_created:
        user.balance = membership.lifetime_support_cents / 100
    else:
        if membership.expires_at > user.membership_expires_at:
            user.membership_expires_at = membership.expires_at
        user.balance = membership.lifetime_support_cents / 100  # TODO: remove when the real money comes in

    user.membership_platform_data = {
        "access_token": auth_data["access_token"],
        "refresh_token": auth_data["refresh_token"],
    }
    user.save()

    session = Session.create_for_user(user)

    redirect_to = reverse("profile", args=[user.slug])

    state = request.GET.get("state")
    if state:
        redirect_to += f"?{state}"

    response = redirect(redirect_to)
    return set_session_cookie(response, user, session)
